{"version":3,"sources":["../../src/mixins/bootable.ts"],"names":[],"mappings":";;;;;;;;;;;;AAGA;;;;;;;;AAQA;kBACe,cAAI,MAAJ,GAAyB,MAAzB,CAAgC;AAC7C,UAAM,UADuC;AAG7C,WAAO;AACL,cAAM;AADD,KAHsC;AAO7C,UAAM;AAAA,eAAO;AACX,sBAAU;AADC,SAAP;AAAA,KAPuC;AAW7C,cAAU;AACR,kBADQ,wBACE;AACR,mBAAO,KAAK,QAAL,IAAiB,CAAC,KAAK,IAAvB,IAA+B,KAAK,QAA3C;AACD;AAHO,KAXmC;AAiB7C,WAAO;AACL,gBADK,sBACG;AACN,iBAAK,QAAL,GAAgB,IAAhB;AACD;AAHI,KAjBsC;AAuB7C,aAAS;AACP,uBADO,2BACU,OADV,EAC0B;AAC/B,mBAAO,KAAK,UAAL,GAAkB,OAAlB,GAA4B,IAAnC;AACD;AAHM;AAvBoC,CAAhC,C","sourcesContent":["import Vue, { VNode } from 'vue'\nimport { toggleable } from './toggleable'\n\n/**\n * Bootable\n * @mixin\n *\n * Used to add lazy content functionality to components\n * Looks for change in \"isActive\" to automatically boot\n * Otherwise can be set manually\n */\n/* @vue/component */\nexport default Vue.extend<toggleable>().extend({\n  name: 'bootable',\n\n  props: {\n    lazy: Boolean\n  },\n\n  data: () => ({\n    isBooted: false\n  }),\n\n  computed: {\n    hasContent (): boolean {\n      return this.isBooted || !this.lazy || this.isActive\n    }\n  },\n\n  watch: {\n    isActive () {\n      this.isBooted = true\n    }\n  },\n\n  methods: {\n    showLazyContent (content: VNode[]): VNode[] | null {\n      return this.hasContent ? content : null\n    }\n  }\n})\n"],"sourceRoot":""}
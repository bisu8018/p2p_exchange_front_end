{"version":3,"sources":["../../src/mixins/translatable.js"],"names":[],"mappings":";;;;;;kBACe;AACb,UAAM,cADO;AAGb,QAHa,kBAGT;AACF,eAAO;AACL,sBAAU,IADL;AAEL,0BAAc,IAFT;AAGL,6BAAiB,IAHZ;AAIL,uBAAW,IAJN;AAKL,0BAAc,IALT;AAML,0BAAc;AANT,SAAP;AAQD,KAZY;;AAcb,cAAU;AACR,iBADQ,uBACC;AACP,mBAAO,KAAK,SAAL,EAAP;AACD;AAHO,KAdG;AAoBb,iBApBa,2BAoBA;AACX,eAAO,mBAAP,CAA2B,QAA3B,EAAqC,KAAK,SAA1C,EAAqD,KAArD;AACA,eAAO,mBAAP,CAA2B,QAA3B,EAAqC,KAAK,SAA1C,EAAqD,KAArD;AACD,KAvBY;;AAyBb,aAAS;AACP,iBADO,uBACE;AACP,mBAAO,gBAAP,CAAwB,QAAxB,EAAkC,KAAK,SAAvC,EAAkD,KAAlD;AACA,mBAAO,gBAAP,CAAwB,QAAxB,EAAkC,KAAK,SAAvC,EAAkD,KAAlD;AACD,SAJM;AAMP,iBANO,uBAME;AACP,iBAAK,cAAL;AAEA,iBAAK,eAAL,GACE,CAAC,KAAK,YAAL,GAAoB,KAAK,WAA1B,KACC,SAAS,KAAK,MAAd,IAAwB,KAAK,YAD9B,CADF;AAKA,iBAAK,QAAL,GAAgB,KAAK,KAAL,CAAW,KAAK,YAAL,GAAoB,KAAK,eAApC,CAAhB;AAEA,gBAAI,KAAK,UAAT,EAAqB;AACnB,qBAAK,UAAL;AACD;AACF,SAnBM;AAqBP,sBArBO,4BAqBO;AACZ,gBAAM,SAAS,KAAK,GAAL,CAAS,qBAAT,EAAf;AAEA,iBAAK,SAAL,GAAiB,OAAO,WAAxB;AACA,iBAAK,YAAL,GAAoB,KAAK,SAAL,GAAiB,KAAK,MAA1C;AACA,iBAAK,WAAL,GAAmB,OAAO,GAAP,GAAa,KAAK,SAArC;AACA,iBAAK,YAAL,GAAoB,OAAO,WAA3B;AACA,iBAAK,YAAL,GAAoB,KAAK,SAAL,GAAiB,KAAK,YAA1C;AACD;AA7BM;AAzBI,C","sourcesContent":["/* @vue/component */\nexport default {\n  name: 'translatable',\n\n  data () {\n    return {\n      parallax: null,\n      parallaxDist: null,\n      percentScrolled: null,\n      scrollTop: null,\n      windowHeight: null,\n      windowBottom: null\n    }\n  },\n\n  computed: {\n    imgHeight () {\n      return this.objHeight()\n    }\n  },\n\n  beforeDestroy () {\n    window.removeEventListener('scroll', this.translate, false)\n    window.removeEventListener('resize', this.translate, false)\n  },\n\n  methods: {\n    listeners () {\n      window.addEventListener('scroll', this.translate, false)\n      window.addEventListener('resize', this.translate, false)\n    },\n\n    translate () {\n      this.calcDimensions()\n\n      this.percentScrolled = (\n        (this.windowBottom - this.elOffsetTop) /\n        (parseInt(this.height) + this.windowHeight)\n      )\n\n      this.parallax = Math.round(this.parallaxDist * this.percentScrolled)\n\n      if (this.translated) {\n        this.translated()\n      }\n    },\n\n    calcDimensions () {\n      const offset = this.$el.getBoundingClientRect()\n\n      this.scrollTop = window.pageYOffset\n      this.parallaxDist = this.imgHeight - this.height\n      this.elOffsetTop = offset.top + this.scrollTop\n      this.windowHeight = window.innerHeight\n      this.windowBottom = this.scrollTop + this.windowHeight\n    }\n  }\n}\n"],"sourceRoot":""}
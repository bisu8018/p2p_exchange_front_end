'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
/* @vue/component */
exports.default = {
    name: 'translatable',
    data: function data() {
        return {
            parallax: null,
            parallaxDist: null,
            percentScrolled: null,
            scrollTop: null,
            windowHeight: null,
            windowBottom: null
        };
    },

    computed: {
        imgHeight: function imgHeight() {
            return this.objHeight();
        }
    },
    beforeDestroy: function beforeDestroy() {
        window.removeEventListener('scroll', this.translate, false);
        window.removeEventListener('resize', this.translate, false);
    },

    methods: {
        listeners: function listeners() {
            window.addEventListener('scroll', this.translate, false);
            window.addEventListener('resize', this.translate, false);
        },
        translate: function translate() {
            this.calcDimensions();
            this.percentScrolled = (this.windowBottom - this.elOffsetTop) / (parseInt(this.height) + this.windowHeight);
            this.parallax = Math.round(this.parallaxDist * this.percentScrolled);
            if (this.translated) {
                this.translated();
            }
        },
        calcDimensions: function calcDimensions() {
            var offset = this.$el.getBoundingClientRect();
            this.scrollTop = window.pageYOffset;
            this.parallaxDist = this.imgHeight - this.height;
            this.elOffsetTop = offset.top + this.scrollTop;
            this.windowHeight = window.innerHeight;
            this.windowBottom = this.scrollTop + this.windowHeight;
        }
    }
};
//# sourceMappingURL=translatable.js.map
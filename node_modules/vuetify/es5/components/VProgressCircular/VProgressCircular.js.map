{"version":3,"sources":["../../../src/components/VProgressCircular/VProgressCircular.js"],"names":[],"mappings":"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","sourcesContent":["import '../../stylus/components/_progress-circular.styl'\n\nimport Colorable from '../../mixins/colorable'\n\n/* @vue/component */\nexport default {\n  name: 'v-progress-circular',\n\n  mixins: [Colorable],\n\n  props: {\n    button: Boolean,\n\n    indeterminate: Boolean,\n\n    rotate: {\n      type: Number,\n      default: 0\n    },\n\n    size: {\n      type: [Number, String],\n      default: 32\n    },\n\n    width: {\n      type: Number,\n      default: 4\n    },\n\n    value: {\n      type: Number,\n      default: 0\n    }\n  },\n\n  computed: {\n    calculatedSize () {\n      return Number(this.size) + (this.button ? 8 : 0)\n    },\n\n    circumference () {\n      return 2 * Math.PI * this.radius\n    },\n\n    classes () {\n      return this.addTextColorClassChecks({\n        'v-progress-circular': true,\n        'v-progress-circular--indeterminate': this.indeterminate,\n        'v-progress-circular--button': this.button\n      })\n    },\n\n    normalizedValue () {\n      if (this.value < 0) {\n        return 0\n      }\n\n      if (this.value > 100) {\n        return 100\n      }\n\n      return this.value\n    },\n\n    radius () {\n      return 20\n    },\n\n    strokeDashArray () {\n      return Math.round(this.circumference * 1000) / 1000\n    },\n\n    strokeDashOffset () {\n      return ((100 - this.normalizedValue) / 100) * this.circumference + 'px'\n    },\n\n    strokeWidth () {\n      return this.width / this.size * this.viewBoxSize * 2\n    },\n\n    styles () {\n      return {\n        height: `${this.calculatedSize}px`,\n        width: `${this.calculatedSize}px`\n      }\n    },\n\n    svgStyles () {\n      return {\n        transform: `rotate(${this.rotate}deg)`\n      }\n    },\n\n    viewBoxSize () {\n      return this.radius / (1 - this.width / this.size)\n    }\n  },\n\n  methods: {\n    genCircle (h, name, offset) {\n      return h('circle', {\n        class: `v-progress-circular__${name}`,\n        attrs: {\n          fill: 'transparent',\n          cx: 2 * this.viewBoxSize,\n          cy: 2 * this.viewBoxSize,\n          r: this.radius,\n          'stroke-width': this.strokeWidth,\n          'stroke-dasharray': this.strokeDashArray,\n          'stroke-dashoffset': offset\n        }\n      })\n    },\n    genSvg (h) {\n      const children = [\n        this.indeterminate || this.genCircle(h, 'underlay', 0),\n        this.genCircle(h, 'overlay', this.strokeDashOffset)\n      ]\n\n      return h('svg', {\n        style: this.svgStyles,\n        attrs: {\n          xmlns: 'http://www.w3.org/2000/svg',\n          viewBox: `${this.viewBoxSize} ${this.viewBoxSize} ${2 * this.viewBoxSize} ${2 * this.viewBoxSize}`\n        }\n      }, children)\n    }\n  },\n\n  render (h) {\n    const info = h('div', { class: 'v-progress-circular__info' }, [this.$slots.default])\n    const svg = this.genSvg(h)\n\n    return h('div', {\n      class: this.classes,\n      style: this.styles,\n      on: this.$listeners\n    }, [svg, info])\n  }\n}\n"],"sourceRoot":""}
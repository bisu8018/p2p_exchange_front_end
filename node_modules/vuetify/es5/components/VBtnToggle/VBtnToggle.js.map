{"version":3,"sources":["../../../src/components/VBtnToggle/VBtnToggle.ts"],"names":[],"mappings":"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","sourcesContent":["import '../../stylus/components/_button-toggle.styl'\n\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nimport mixins from '../../util/mixins'\n\nimport ButtonGroup from '../../mixins/button-group'\nimport Themeable from '../../mixins/themeable'\nimport { consoleWarn } from '../../util/console'\n\n/* @vue/component */\nconst VBtnToggle = mixins(ButtonGroup, Themeable).extend({\n  name: 'v-btn-toggle',\n\n  model: {\n    prop: 'inputValue',\n    event: 'change'\n  },\n\n  props: {\n    inputValue: {\n      required: false\n    } as PropValidator<any>,\n    mandatory: Boolean,\n    multiple: Boolean\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-btn-toggle': true,\n        'v-btn-toggle--selected': this.hasValue,\n        'theme--light': this.light,\n        'theme--dark': this.dark\n      }\n    },\n    hasValue (): boolean {\n      return (this.multiple && this.inputValue.length) ||\n        (!this.multiple && this.inputValue !== null &&\n          typeof this.inputValue !== 'undefined')\n    }\n  },\n\n  watch: {\n    inputValue: {\n      handler () {\n        this.update()\n      },\n      deep: true\n    }\n  },\n\n  created () {\n    if (this.multiple && !Array.isArray(this.inputValue)) {\n      consoleWarn('Model must be bound to an array if the multiple property is true.', this)\n    }\n  },\n\n  methods: {\n    isSelected (i: number): boolean {\n      const item = this.getValue(i)\n      if (!this.multiple) {\n        return this.inputValue === item\n      }\n\n      return this.inputValue.includes(item)\n    },\n    updateValue (i: number): void {\n      const item = this.getValue(i)\n      if (!this.multiple) {\n        if (this.mandatory && this.inputValue === item) return\n        this.$emit('change', this.inputValue === item ? null : item)\n        return\n      }\n\n      const items = this.inputValue.slice()\n\n      const index = items.indexOf(item)\n      if (index > -1) {\n        if (this.mandatory && items.length === 1) return\n        items.length >= 1 && items.splice(index, 1)\n      } else {\n        items.push(item)\n      }\n\n      this.$emit('change', items)\n    },\n    updateAllValues (): void {\n      if (!this.multiple) return\n\n      const items = []\n\n      for (let i = 0; i < this.buttons.length; ++i) {\n        const item = this.getValue(i)\n        const index = this.inputValue.indexOf(item)\n        if (index !== -1) {\n          items.push(item)\n        }\n      }\n\n      this.$emit('change', items)\n    }\n  },\n\n  render (h): VNode {\n    return h('div', { class: this.classes }, this.$slots.default)\n  }\n})\n\n/* eslint-disable-next-line no-redeclare */\nexport type VBtnToggle = InstanceType<typeof VBtnToggle> & {\n  $el: HTMLDivElement\n}\nexport default VBtnToggle\n"],"sourceRoot":""}
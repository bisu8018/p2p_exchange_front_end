{"version":3,"sources":["../../../../src/components/VApp/mixins/app-breakpoint.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * A modified version of https://gist.github.com/cb109/b074a65f7595cffc21cea59ce8d15f9b\n */\n\n/**\n * A Vue mixin to get the current width/height and the associated breakpoint.\n *\n * Useful to e.g. adapt the user interface from inside a Vue component\n * as opposed to using CSS classes. The breakpoint pixel values and\n * range names are taken from Vuetify (https://github.com/vuetifyjs).\n *\n * Use within a component:\n *\n *   import breakpoint from './breakpoint.js'\n *\n *   export default {\n *     name: 'my-component',\n *     mixins: [breakpoint],\n *     ...\n *\n * Then inside a template:\n *\n *   <div v-if=\"$breakpoint.smAndDown\">...</div>\n */\nconst breakpoint = {\n  data () {\n    return {\n      clientWidth: clientDimensions.getWidth(),\n      clientHeight: clientDimensions.getHeight(),\n      resizeTimeout: null\n    }\n  },\n\n  computed: {\n    breakpoint () {\n      const xs = this.clientWidth < 600\n      const sm = this.clientWidth < 960 && !xs\n      const md = this.clientWidth < (1280 - 16) && !(sm || xs)\n      const lg = this.clientWidth < (1920 - 16) && !(md || sm || xs)\n      const xl = this.clientWidth >= (1920 - 16) && !(lg || md || sm || xs)\n\n      const xsOnly = xs\n      const smOnly = sm\n      const smAndDown = (xs || sm) && !(md || lg || xl)\n      const smAndUp = !xs && (sm || md || lg || xl)\n      const mdOnly = md\n      const mdAndDown = (xs || sm || md) && !(lg || xl)\n      const mdAndUp = !(xs || sm) && (md || lg || xl)\n      const lgOnly = lg\n      const lgAndDown = (xs || sm || md || lg) && !xl\n      const lgAndUp = !(xs || sm || md) && (lg || xl)\n      const xlOnly = xl\n\n      let name\n      switch (true) {\n        case (xs):\n          name = 'xs'\n          break\n        case (sm):\n          name = 'sm'\n          break\n        case (md):\n          name = 'md'\n          break\n        case (lg):\n          name = 'lg'\n          break\n        default:\n          name = 'xl'\n          break\n      }\n\n      const result = {\n        // Definite breakpoint.\n        xs,\n        sm,\n        md,\n        lg,\n        xl,\n\n        // Useful e.g. to construct CSS class names dynamically.\n        name,\n\n        // Breakpoint ranges.\n        xsOnly,\n        smOnly,\n        smAndDown,\n        smAndUp,\n        mdOnly,\n        mdAndDown,\n        mdAndUp,\n        lgOnly,\n        lgAndDown,\n        lgAndUp,\n        xlOnly,\n\n        // For custom breakpoint logic.\n        width: this.clientWidth,\n        height: this.clientHeight\n      }\n\n      return result\n    }\n  },\n\n  watch: {\n    breakpoint (val) {\n      this.$vuetify.breakpoint = val\n    }\n  },\n\n  created () {\n    this.$vuetify.breakpoint = this.breakpoint\n  },\n\n  methods: {\n    onResize () {\n      clearTimeout(this.resizeTimeout)\n\n      // Added debounce to match what\n      // v-resize used to do but was\n      // removed due to a memory leak\n      // https://github.com/vuetifyjs/vuetify/pull/2997\n      this.resizeTimeout = setTimeout(() => {\n        this.clientWidth = clientDimensions.getWidth()\n        this.clientHeight = clientDimensions.getHeight()\n      }, 200)\n    }\n  }\n}\n\n// Cross-browser support as described in:\n// https://stackoverflow.com/questions/1248081\nconst clientDimensions = {\n  getWidth () {\n    if (typeof document === 'undefined') return 0 // SSR\n    return Math.max(\n      document.documentElement.clientWidth,\n      window.innerWidth || 0\n    )\n  },\n  getHeight () {\n    if (typeof document === 'undefined') return 0 // SSR\n    return Math.max(\n      document.documentElement.clientHeight,\n      window.innerHeight || 0\n    )\n  }\n}\n\nexport default breakpoint\n"],"sourceRoot":""}
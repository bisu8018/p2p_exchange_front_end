{"remainingRequest":"C:\\Users\\Dean\\git\\p2p_exchange\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Dean\\git\\p2p_exchange\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Dean\\git\\p2p_exchange\\frontend\\src\\views\\login\\Login.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\Dean\\git\\p2p_exchange\\frontend\\src\\views\\login\\Login.vue","mtime":1530608054061},{"path":"C:\\Users\\Dean\\git\\p2p_exchange\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1530186861941},{"path":"C:\\Users\\Dean\\git\\p2p_exchange\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\Users\\Dean\\git\\p2p_exchange\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'login',\n  data: function data() {\n    return {\n      myEmail: '',\n      myPwd: '',\n      slider: 0,\n      isModal: false\n    };\n  },\n  components: {},\n  computed: {},\n  methods: {\n    doLogin: function doLogin() {\n      axios.post(\"/login\", {\n        myEmail: 'myEmail',\n        myPwd: 'myPwd'\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (ex) {\n        this.isModal = true;\n        console.log(ex);\n      });\n    },\n    goZero: function goZero() {\n      console.log(HTMLDivElement.oldValue);\n\n      if (this.slider !== 100) {\n        this.slider = HTMLDivElement.oldValue;\n        console.log(this.slider);\n      }\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA,eAAA;AACA,QAAA,OADA;AAEA,QAAA,gBAAA;AACA,WAAA;AACA,eAAA,EADA;AAEA,aAAA,EAFA;AAGA,cAAA,CAHA;AAIA,eAAA;AAJA,KAAA;AAMA,GATA;AAUA,cAAA,EAVA;AAcA,YAAA,EAdA;AAiBA,WAAA;AACA,aAAA,mBAAA;AACA,YAAA,IAAA,CAAA,QAAA,EAAA;AACA,iBAAA,SADA;AAEA,eAAA;AAFA,OAAA,EAIA,IAJA,CAIA,UAAA,QAAA,EAAA;AACA,gBAAA,GAAA,CAAA,QAAA;AACA,OANA,EAMA,KANA,CAMA,UAAA,EAAA,EAAA;AACA,aAAA,OAAA,GAAA,IAAA;AACA,gBAAA,GAAA,CAAA,EAAA;AAEA,OAVA;AAWA,KAbA;AAcA,YAAA,kBAAA;AACA,cAAA,GAAA,CAAA,eAAA,QAAA;;AACA,UAAA,KAAA,MAAA,KAAA,GAAA,EAAA;AACA,aAAA,MAAA,GAAA,eAAA,QAAA;AACA,gBAAA,GAAA,CAAA,KAAA,MAAA;AACA;AACA;AApBA;AAjBA,CAAA","sourcesContent":["<template>\r\n\r\n<div class=\"loginPage\">\r\n    <div class=\"loginsBox\">\r\n        <div class=\"loginTabsForm\">\r\n            <div class=\"loginTitle\">\r\n                <img class=\"iconLogo\" src=\"../../assets/logo.png\"> <!--우리로고이미지로 대체해야함-->\r\n                Welcome\r\n            </div>\r\n            <p class=\"labelDesc\">Account</p>\r\n            <div class=\"loginItem\">\r\n                <input type=\"text\" id=\"Email\" class=\"inputControl\" v-model=\"myEmail\" placeholder=\"Email\">\r\n            </div>\r\n            <p class=\"labelDesc\">Password</p>\r\n            <div class=\"loginItem\">\r\n                <input type=\"password\" id=\"pwd\" class=\"inputControl\" v-model=\"myPwd\" placeholder=\"Enter password\"/>\r\n            </div>\r\n            <!--account가 채워지면 보이게되는 인증용 슬라이더.-->\r\n            <div class=\"verifySlider\" v-if=\"myEmail.length>0\">                  \r\n                <p class=\"labelDesc\">Verify</p>                                 <!--클라이언트 단에서만 다뤄지기에 보안이 약해차후 회의통해 빠지거나 구글 캣챠로 대체될수도 있음-->\r\n                <span class=\"slideTounLock\">Please slide to verify</span>\r\n                <v-app class=\"Slider\">\r\n                    <v-container fluid grid-list-lg>                            <!--스타일은 그냥 github 보고 쓴거라 다른 스타일로 변경필요-->\r\n                        <v-layout row wrap>\r\n                            <v-flex xs12 >\r\n                                <v-slider v-if=\"slider !== 100\" class=\"verifidNotOk\" ref=\"slider\" \r\n                                    v-model=\"slider\" @click=\"goZero()\" label=\"Verify\"></v-slider>\r\n                                <div v-else class=\"verifidOk\">Verified</div>\r\n                            </v-flex>\r\n                        </v-layout>\r\n                    </v-container>\r\n                </v-app>\r\n            </div>\r\n\r\n                \r\n            <div class=\"forgetControl\">\r\n                <a href=\"https://www.allblab.com\" class=\"forgetPwd\">               <!--password 분실시 찾아주는 페이지로 이동-->\r\n                Forget Password?</a>\r\n                <br>\r\n                <br>\r\n            </div>\r\n            <div class=\"btnItem\">\r\n                <button type=\"button\" class=\"btnLogin\" @click=\"doLogin()\">\r\n                    <span>Log In</span>\r\n                </button>\r\n            <div class=\"loginOrBox\">\r\n                <span>or</span>\r\n                <div class=\"loginOrLine\"></div>\r\n            </div>\r\n            <a href=\"#/signup\" class=\"register\">Sign Up</a>                      <!--sign up page로 이동-->\r\n            </div>        \r\n        </div>\r\n    </div>\r\n    <v-card class=\"notice\" v-if=\"isModal\">                <!--login 실패시 띄워주는 fixed popup-->\r\n        <v-card-title class=\"noticeHead\">                 <!--huobi에선 웹 : \"오른쪽 윗단에 popup 됨\", 모바일 : 윗단 가운데에 popup됨-->\r\n            Notice</v-card-title>\r\n        <v-card-text>Illegal Parameter</v-card-text>\r\n        <v-card-actions>\r\n            <v-spacer></v-spacer>\r\n            <v-btn flat @click=\"isModal=false\">X</v-btn>\r\n        </v-card-actions>\r\n    </v-card>   \r\n</div>\r\n\r\n</template>\r\n\r\n\r\n\r\n<script>\r\n\r\nexport default{\r\n  name: 'login',\r\n    data: function(){\r\n        return{\r\n            myEmail : '',\r\n            myPwd : '',\r\n            slider: 0,\r\n            isModal : false,\r\n        }\r\n    },\r\n    components: {\r\n        \r\n    },\r\n    \r\n    computed: {\r\n        \r\n    },\r\n    methods: {\r\n        doLogin : function(){\r\n            axios.post(\"/login\",{\r\n                myEmail : 'myEmail',\r\n                myPwd : 'myPwd',\r\n            })\r\n            .then(function(response){\r\n                console.log(response);\r\n            }).catch(function(ex){\r\n                this.isModal = true;\r\n                console.log(ex)\r\n                \r\n            })\r\n        },\r\n        goZero : function() {\r\n            console.log(HTMLDivElement.oldValue);\r\n            if(this.slider !== 100){\r\n                this.slider = HTMLDivElement.oldValue;\r\n                console.log(this.slider);\r\n            }\r\n        },\r\n\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n.loginPage{\r\n    text-align: center;\r\n    position: relative;\r\n}\r\n.iconLogo{\r\n    width : 20px;\r\n    height: 20px;\r\n\r\n}\r\n.notice{\r\n    float: right;\r\n}\r\n.forgetPwd{\r\n    position: relative;\r\n}\r\n.btnLogin{\r\n    position: relative;\r\n}\r\n.verifySlider{\r\n    height: 50px;\r\n    width: 300px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    \r\n}\r\n.register{\r\n    position: relative;\r\n}\r\n.notice{\r\n    text-align: center;\r\n     \r\n    \r\n\r\n}\r\n\r\n\r\n</style>"],"sourceRoot":"src\\views\\login"}]}
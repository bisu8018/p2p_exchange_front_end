{"remainingRequest":"/Users/gimminji/Documents/GitHub/p2p_exchange_frontend/node_modules/babel-loader/lib/index.js!/Users/gimminji/Documents/GitHub/p2p_exchange_frontend/node_modules/ts-loader/index.js??ref--13-2!/Users/gimminji/Documents/GitHub/p2p_exchange_frontend/src/vuex/modules/state.ts","dependencies":[{"path":"/Users/gimminji/Documents/GitHub/p2p_exchange_frontend/src/vuex/modules/state.ts","mtime":1530707503584},{"path":"/Users/gimminji/Documents/GitHub/p2p_exchange_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1530707560604},{"path":"/Users/gimminji/Documents/GitHub/p2p_exchange_frontend/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/gimminji/Documents/GitHub/p2p_exchange_frontend/node_modules/ts-loader/index.js","mtime":1530127508000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/gimminji/Documents/GitHub/p2p_exchange_frontend/node_modules/@babel/runtime/helpers/builtin/es6/defineProperty\";\n\nvar _mutations, _actions;\n\nimport { VuexTypes } from \"@/vuex/config/VuexTypes\";\nvar mutations = (_mutations = {}, _defineProperty(_mutations, VuexTypes.INIT_COMPLETED, function (state, isCompleted) {\n  state.initCompleted = isCompleted;\n}), _defineProperty(_mutations, VuexTypes.SET_IS_MOBILE, function (state, isMobile) {\n  state.isMobile = isMobile;\n}), _defineProperty(_mutations, VuexTypes.SET_CHECK_OS, function (state, checkOs) {\n  state.checkOs = checkOs;\n}), _mutations);\nvar actions = (_actions = {}, _defineProperty(_actions, VuexTypes.INIT_COMPLETED, function (context, isCompleted) {\n  context.commit(VuexTypes.INIT_COMPLETED, isCompleted);\n}), _defineProperty(_actions, VuexTypes.SET_IS_MOBILE, function (context, isMobile) {\n  context.commit(VuexTypes.SET_IS_MOBILE, isMobile);\n}), _defineProperty(_actions, VuexTypes.SET_CHECK_OS, function (context, checkOs) {\n  context.commit(VuexTypes.SET_CHECK_OS, checkOs);\n}), _actions);\nvar getters = {};\nvar initCompleted = false;\nvar isMobile = false; // OS 체크\n\nvar checkOs = 1;\nvar state = {\n  initCompleted: initCompleted,\n  isMobile: isMobile,\n  //OS 체크\n  checkOs: checkOs\n};\nexport default {\n  namespaced: false,\n  actions: actions,\n  getters: getters,\n  state: state,\n  mutations: mutations\n};",{"version":3,"sources":["/Users/gimminji/Documents/GitHub/p2p_exchange_frontend/src/vuex/modules/state.ts"],"names":[],"mappings":";;;;AAAA,SAAQ,SAAR,QAAwB,yBAAxB;AAGA,IAAM,0DAGD,UAAU,cAHT,YAG0B,KAH1B,EAGsC,WAHtC,EAG0D;AACxD,QAAM,aAAN,GAAsB,WAAtB;AACH,CALC,+BAOD,UAAU,aAPT,YAOyB,KAPzB,EAOqC,QAPrC,EAOsD;AACpD,QAAM,QAAN,GAAiB,QAAjB;AACH,CATC,+BAWD,UAAU,YAXT,YAWwB,KAXxB,EAWoC,OAXpC,EAWmD;AACjD,QAAM,OAAN,GAAgB,OAAhB;AACH,CAbC,cAAN;AAiBA,IAAM,oDAGD,UAAU,cAHT,YAG0B,OAH1B,EAGwC,WAHxC,EAG4D;AAC1D,UAAQ,MAAR,CAAe,UAAU,cAAzB,EAAyC,WAAzC;AACH,CALC,6BAOD,UAAU,aAPT,YAOyB,OAPzB,EAOuC,QAPvC,EAOwD;AACtD,UAAQ,MAAR,CAAe,UAAU,aAAzB,EAAwC,QAAxC;AACH,CATC,6BAWD,UAAU,YAXT,YAWwB,OAXxB,EAWsC,OAXtC,EAWqD;AACnD,UAAQ,MAAR,CAAe,UAAU,YAAzB,EAAuC,OAAvC;AACH,CAbC,YAAN;AAgBA,IAAM,UAAU,EAAhB;AAIA,IAAI,gBAAyB,KAA7B;AACA,IAAI,WAAoB,KAAxB,C,CACA;;AACA,IAAI,UAAkB,CAAtB;AAGA,IAAM,QAAQ;AACZ,iBAAe,aADH;AAEZ,YAAU,QAFE;AAGZ;AACA,WAAS;AAJG,CAAd;AAOA,eAAe;AACb,cAAY,KADC;AAEb,kBAFa;AAGb,kBAHa;AAIb,cAJa;AAKb;AALa,CAAf","sourcesContent":["import {VuexTypes} from \"@/vuex/config/VuexTypes\";\n\n\nconst mutations = {\n    // -                   현재 상태                             -\n    // 초기화 완료\n    [VuexTypes.INIT_COMPLETED] (state: any, isCompleted: boolean) {\n        state.initCompleted = isCompleted\n    },\n    // 모바일\n    [VuexTypes.SET_IS_MOBILE] (state: any, isMobile: boolean) {\n        state.isMobile = isMobile;\n    },\n    // OS 체크\n    [VuexTypes.SET_CHECK_OS] (state: any, checkOs: number) {\n        state.checkOs = checkOs;\n    },\n};\n\n\nconst actions = {\n    // -                   현재 상태                             -\n    // 초기화 완료\n    [VuexTypes.INIT_COMPLETED] (context: any, isCompleted: boolean) {\n        context.commit(VuexTypes.INIT_COMPLETED, isCompleted)\n    },\n    // 모바일\n    [VuexTypes.SET_IS_MOBILE] (context: any, isMobile: boolean) {\n        context.commit(VuexTypes.SET_IS_MOBILE, isMobile)\n    },\n    // OS 체크\n    [VuexTypes.SET_CHECK_OS] (context: any, checkOs: number) {\n        context.commit(VuexTypes.SET_CHECK_OS, checkOs)\n    },\n};\n\nconst getters = {\n};\n\n\nlet initCompleted: boolean = false;\nlet isMobile: boolean = false;\n// OS 체크\nlet checkOs: number = 1;\n\n\nconst state = {\n  initCompleted: initCompleted,\n  isMobile: isMobile,\n  //OS 체크\n  checkOs: checkOs,\n}\n\nexport default {\n  namespaced: false,\n  actions,\n  getters,\n  state,\n  mutations\n}\n"],"sourceRoot":""}]}
{"remainingRequest":"C:\\Users\\Dean\\git\\p2p_exchange\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Dean\\git\\p2p_exchange\\frontend\\node_modules\\ts-loader\\index.js??ref--13-2!C:\\Users\\Dean\\git\\p2p_exchange\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Dean\\git\\p2p_exchange\\frontend\\src\\views\\home\\body\\signup\\SignUp.vue?vue&type=script&lang=ts","dependencies":[{"path":"C:\\Users\\Dean\\git\\p2p_exchange\\frontend\\src\\views\\home\\body\\signup\\SignUp.vue","mtime":1530860451812},{"path":"C:\\Users\\Dean\\git\\p2p_exchange\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1530186861941},{"path":"C:\\Users\\Dean\\git\\p2p_exchange\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\Users\\Dean\\git\\p2p_exchange\\frontend\\node_modules\\ts-loader\\index.js","mtime":1530127508000},{"path":"C:\\Users\\Dean\\git\\p2p_exchange\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport { abUtils } from '@/common/utils';\nimport AccountService from '@/service/account/AccountService';\nexport default Vue.extend({\n  name: 'home',\n  data: function data() {\n    return {\n      htmlSignupSubject: Vue.prototype.$str(\"signupSubject\"),\n      htmlEmail: Vue.prototype.$str(\"email\"),\n      htmlPassword: Vue.prototype.$str(\"password\"),\n      htmlPasswordPlaceholder: Vue.prototype.$str(\"passwordPlaceholder\"),\n      htmlPasswordConfirm: Vue.prototype.$str(\"passwordConfirm\"),\n      htmlTermsLabel: Vue.prototype.$str(\"termsLabel\"),\n      htmlTermsBtn: Vue.prototype.$str(\"termsBtn\"),\n      htmlSignupText: Vue.prototype.$str(\"signupText\"),\n      htmlHaveAccount: Vue.prototype.$str(\"haveAccount\"),\n      htmlLoginText: Vue.prototype.$str(\"loginText\"),\n      email: \"\",\n      password: \"\",\n      passwordConfirm: \"\",\n      checkbox: false,\n      verify_warning: \"\"\n    };\n  },\n  methods: {\n    onCheck: function onCheck() {\n      // Warnings in case of error in e-mail or password entry  \n      //email null\n      if (this.email === \"\") {\n        this.verify_warning = Vue.prototype.$str(\"emailValue\");\n        return;\n      } //email form \n\n\n      if (!abUtils.isEmail(this.email)) {\n        this.verify_warning = Vue.prototype.$str(\"emailForm\");\n        return;\n      } //password null\n\n\n      if (this.password === \"\") {\n        this.verify_warning = Vue.prototype.$str(\"passwordValue\");\n        return;\n      } //password digit\n\n\n      if (this.password.length <= 8) {\n        this.verify_warning = Vue.prototype.$str(\"passwordDigit\");\n        return;\n      } //password form\n\n\n      if (!abUtils.isPasswd(this.password)) {\n        this.verify_warning = Vue.prototype.$str(\"passwordForm\");\n        return;\n      } //password ~ password confirm match\n\n\n      if (this.password !== this.passwordConfirm) {\n        this.verify_warning = Vue.prototype.$str(\"passwordMatch\");\n        return;\n      } //terms and conditions\n\n\n      if (this.checkbox === false) {\n        this.verify_warning = Vue.prototype.$str(\"acceptConditions\");\n        return;\n      }\n\n      this.onSignup();\n    },\n    onSignup: function onSignup() {\n      //Send Email verification codes to Server\n      AccountService.Account.login({}, function (error) {\n        if (!error) {\n          console.log(\"success\");\n        } else {\n          console.log(\"POST ERROR ::::::: \" + error);\n        }\n      });\n    },\n    goLogin: function goLogin() {\n      this.$router.push(\"/login\");\n    }\n  }\n});",{"version":3,"sources":["C:\\Users\\Dean\\git\\p2p_exchange\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Dean\\git\\p2p_exchange\\frontend\\src\\views\\home\\body\\signup\\SignUp.vue?vue&type=script&lang=ts"],"names":[],"mappings":"AAoCA,OAAO,GAAP,MAAgB,KAAhB;AAEA,SAAS,OAAT,QAAwB,gBAAxB;AACA,OAAO,cAAP,MAA2B,kCAA3B;AAGA,eAAe,IAAI,MAAJ,CAAW;AACxB,QAAM,MADkB;AAExB,QAAM;AAAA,WAAO;AACX,yBAAmB,IAAI,SAAJ,CAAc,IAAd,CAAmB,eAAnB,CADR;AAEX,iBAAW,IAAI,SAAJ,CAAc,IAAd,CAAmB,OAAnB,CAFA;AAGX,oBAAc,IAAI,SAAJ,CAAc,IAAd,CAAmB,UAAnB,CAHH;AAIX,+BAAyB,IAAI,SAAJ,CAAc,IAAd,CAAmB,qBAAnB,CAJd;AAKX,2BAAqB,IAAI,SAAJ,CAAc,IAAd,CAAmB,iBAAnB,CALV;AAMX,sBAAgB,IAAI,SAAJ,CAAc,IAAd,CAAmB,YAAnB,CANL;AAOX,oBAAc,IAAI,SAAJ,CAAc,IAAd,CAAmB,UAAnB,CAPH;AAQX,sBAAgB,IAAI,SAAJ,CAAc,IAAd,CAAmB,YAAnB,CARL;AASX,uBAAkB,IAAI,SAAJ,CAAc,IAAd,CAAmB,aAAnB,CATP;AAUX,qBAAe,IAAI,SAAJ,CAAc,IAAd,CAAmB,WAAnB,CAVJ;AAaX,aAAO,EAbI;AAcX,gBAAU,EAdC;AAeX,uBAAiB,EAfN;AAgBX,gBAAU,KAhBC;AAiBX,sBAAgB;AAjBL,KAAP;AAAA,GAFkB;AAqBxB,WAAS;AACP,WADO,qBACA;AACL;AAEA;AACA,UAAI,KAAK,KAAL,KAAe,EAAnB,EAAuB;AACrB,aAAK,cAAL,GAAsB,IAAI,SAAJ,CAAc,IAAd,CAAmB,YAAnB,CAAtB;AACA;AACD,OAPI,CAQL;;;AACA,UAAI,CAAC,QAAQ,OAAR,CAAgB,KAAK,KAArB,CAAL,EAAkC;AAChC,aAAK,cAAL,GAAsB,IAAI,SAAJ,CAAc,IAAd,CAAmB,WAAnB,CAAtB;AACA;AACD,OAZI,CAaL;;;AACA,UAAI,KAAK,QAAL,KAAkB,EAAtB,EAA0B;AACxB,aAAK,cAAL,GAAsB,IAAI,SAAJ,CAAc,IAAd,CAAmB,eAAnB,CAAtB;AACA;AACD,OAjBI,CAkBL;;;AACA,UAAI,KAAK,QAAL,CAAc,MAAd,IAAwB,CAA5B,EAA+B;AAC7B,aAAK,cAAL,GAAsB,IAAI,SAAJ,CAAc,IAAd,CAAmB,eAAnB,CAAtB;AACA;AACD,OAtBI,CAuBL;;;AACA,UAAI,CAAC,QAAQ,QAAR,CAAiB,KAAK,QAAtB,CAAL,EAAsC;AACpC,aAAK,cAAL,GAAsB,IAAI,SAAJ,CAAc,IAAd,CAAmB,cAAnB,CAAtB;AACA;AACD,OA3BI,CA4BL;;;AACA,UAAI,KAAK,QAAL,KAAkB,KAAK,eAA3B,EAA4C;AAC1C,aAAK,cAAL,GAAsB,IAAI,SAAJ,CAAc,IAAd,CAAmB,eAAnB,CAAtB;AACA;AACD,OAhCI,CAiCL;;;AACA,UAAI,KAAK,QAAL,KAAkB,KAAtB,EAA6B;AAC3B,aAAK,cAAL,GAAsB,IAAI,SAAJ,CAAc,IAAd,CAAmB,kBAAnB,CAAtB;AACA;AACD;;AAED,WAAK,QAAL;AACD,KAzCM;AA0CP,YA1CO,sBA0CC;AACN;AACA,qBAAe,OAAf,CAAuB,KAAvB,CAA6B,EAA7B,EAAgC,UAAS,KAAT,EAAc;AAC5C,YAAG,CAAC,KAAJ,EAAU;AACR,kBAAQ,GAAR,CAAY,SAAZ;AACD,SAFD,MAEK;AACH,kBAAQ,GAAR,CAAY,wBAAwB,KAApC;AACD;AACF,OAND;AAOD,KAnDM;AAoDP,WApDO,qBAoDA;AACL,WAAK,OAAL,CAAa,IAAb,CAAkB,QAAlB;AACD;AAtDM;AArBe,CAAX,CAAf","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue';\nimport AXIOS from 'axios';\nimport { abUtils } from '@/common/utils';\nimport AccountService from '@/service/account/AccountService';\n\n\nexport default Vue.extend({\n  name: 'home',\n  data: () => ({\n    htmlSignupSubject: Vue.prototype.$str(\"signupSubject\"), //Sign up to AllB\n    htmlEmail: Vue.prototype.$str(\"email\"),\n    htmlPassword: Vue.prototype.$str(\"password\"),\n    htmlPasswordPlaceholder: Vue.prototype.$str(\"passwordPlaceholder\"), //8 to 20 characters with a mix of letters and numbers\n    htmlPasswordConfirm: Vue.prototype.$str(\"passwordConfirm\"), //Password Confirm\n    htmlTermsLabel: Vue.prototype.$str(\"termsLabel\"), //I agree to the Terms of Service\n    htmlTermsBtn: Vue.prototype.$str(\"termsBtn\"), // Terms of Service\n    htmlSignupText: Vue.prototype.$str(\"signupText\"), //SIGN UP\n    htmlHaveAccount : Vue.prototype.$str(\"haveAccount\"), //Already have an account ?\n    htmlLoginText: Vue.prototype.$str(\"loginText\"),       //LOG IN\n\n\n    email: \"\",\n    password: \"\",\n    passwordConfirm: \"\",\n    checkbox: false,\n    verify_warning: \"\"\n  }),\n  methods: { \n    onCheck() { \n      // Warnings in case of error in e-mail or password entry  \n\n      //email null\n      if (this.email === \"\") {\n        this.verify_warning = Vue.prototype.$str(\"emailValue\");\n        return;\n      }\n      //email form \n      if (!abUtils.isEmail(this.email)) {\n        this.verify_warning = Vue.prototype.$str(\"emailForm\");\n        return;\n      }\n      //password null\n      if (this.password === \"\") {\n        this.verify_warning = Vue.prototype.$str(\"passwordValue\");\n        return;\n      }\n      //password digit\n      if (this.password.length <= 8) {\n        this.verify_warning = Vue.prototype.$str(\"passwordDigit\");\n        return;\n      }  \n      //password form\n      if (!abUtils.isPasswd(this.password)) {\n        this.verify_warning = Vue.prototype.$str(\"passwordForm\");\n        return;\n      }  \n      //password ~ password confirm match\n      if (this.password !== this.passwordConfirm) {\n        this.verify_warning = Vue.prototype.$str(\"passwordMatch\");\n        return;\n      }\n      //terms and conditions\n      if (this.checkbox === false) {\n        this.verify_warning = Vue.prototype.$str(\"acceptConditions\");\n        return;\n      } \n      \n      this.onSignup();\n    },\n    onSignup() {\n      //Send Email verification codes to Server\n      AccountService.Account.login({},function(error){\n        if(!error){\n          console.log(\"success\");\n        }else{\n          console.log(\"POST ERROR ::::::: \" + error);\n        }\n      })\n    },\n    goLogin() {\n      this.$router.push(\"/login\");\n    }\n  }\n});\n"],"sourceRoot":""}]}
{"remainingRequest":"C:\\Users\\Dean\\git\\p2p_exchange\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Dean\\git\\p2p_exchange\\frontend\\node_modules\\ts-loader\\index.js??ref--13-2!C:\\Users\\Dean\\git\\p2p_exchange\\frontend\\src\\vuex\\MainRepository.ts","dependencies":[{"path":"C:\\Users\\Dean\\git\\p2p_exchange\\frontend\\src\\vuex\\MainRepository.ts","mtime":1530608054065},{"path":"C:\\Users\\Dean\\git\\p2p_exchange\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1530186861941},{"path":"C:\\Users\\Dean\\git\\p2p_exchange\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\Users\\Dean\\git\\p2p_exchange\\frontend\\node_modules\\ts-loader\\index.js","mtime":1530127508000}],"contextDependencies":[],"result":["import SampleController from \"@/vuex/controller/SampleController\";\nimport StateController from \"@/vuex/controller/StateController\";\nimport { VuexTypes } from \"@/vuex/config/VuexTypes\";\nvar sampleController;\nvar stateController;\nvar store;\nvar instance;\nexport default {\n  init: function init(vuexStore, callback) {\n    // Vuex < > Controller 연결\n    store = vuexStore;\n    sampleController = new SampleController(store);\n    stateController = new StateController(store); // 자기 참조할 때 씀\n\n    instance = this; // 서버 데이터 초기화 -> 완료 후 Callback\n    // MainService.getInitValue(function (data: any) {\n    //     instance.initData(data);\n    //     callback()\n    // });\n    // 모바일 인지 체크 -> Vuex\n\n    if (document.documentElement.clientWidth < 768) {\n      this.State.controller().setIsMobile(true);\n    } else {\n      this.State.controller().setIsMobile(false);\n    } // 운영체제 체크\n\n\n    if (/Android/i.test(navigator.userAgent)) {\n      // 안드로이드 체크\n      this.State.controller().setCheckOs(1);\n    } else if (/iPhone|iPad|iPod/i.test(navigator.userAgent)) {\n      // IOS 체크\n      this.State.controller().setCheckOs(2);\n    } else {\n      // 기타\n      this.State.controller().setCheckOs(3);\n    }\n  },\n  initData: function initData(data) {// 서버 초기 데이터를 파싱 한다.\n    // // 유저 파싱\n    // this.setMyInfo(new User(data['user']));\n    //\n    // // 계정 JSON 파싱\n    // for (let key in data['accounts']) {\n    //     accountController.push(data['accounts'][key])\n    // }\n  },\n  // 서버 데이터 초기화가 완료를 파악할 때 사용한다. (서버 데이터 완료 후 뷰 그리기 등)\n  setInitCompleted: function setInitCompleted(isCompleted) {\n    store.dispatch(VuexTypes.INIT_COMPLETED, isCompleted);\n  },\n  State: {\n    controller: function controller() {\n      return stateController;\n    },\n    isMobile: function isMobile() {\n      return stateController.isMoblie();\n    }\n  },\n  User: {},\n  Login: {},\n  SignUp: {}\n};",{"version":3,"sources":["C:\\Users\\Dean\\git\\p2p_exchange\\frontend\\src\\vuex\\MainRepository.ts"],"names":[],"mappings":"AACA,OAAO,gBAAP,MAA6B,oCAA7B;AACA,OAAO,eAAP,MAA4B,mCAA5B;AACA,SAAQ,SAAR,QAAwB,yBAAxB;AAGA,IAAI,gBAAJ;AACA,IAAI,eAAJ;AAEA,IAAI,KAAJ;AACA,IAAI,QAAJ;AAEA,eAAe;AACX,QAAM,cAAU,SAAV,EAAiC,QAAjC,EAAoD;AACtD;AACA,YAAQ,SAAR;AAEA,uBAAmB,IAAI,gBAAJ,CAAqB,KAArB,CAAnB;AACA,sBAAkB,IAAI,eAAJ,CAAoB,KAApB,CAAlB,CALsD,CAOtD;;AACA,eAAW,IAAX,CARsD,CAUtD;AACA;AACA;AACA;AACA;AAGA;;AACA,QAAI,SAAS,eAAT,CAAyB,WAAzB,GAAuC,GAA3C,EAAgD;AAC5C,WAAK,KAAL,CAAW,UAAX,GAAwB,WAAxB,CAAoC,IAApC;AACH,KAFD,MAEO;AACH,WAAK,KAAL,CAAW,UAAX,GAAwB,WAAxB,CAAoC,KAApC;AACH,KAtBqD,CAwBtD;;;AACA,QAAI,WAAW,IAAX,CAAgB,UAAU,SAA1B,CAAJ,EAA0C;AAAE;AACxC,WAAK,KAAL,CAAW,UAAX,GAAwB,UAAxB,CAAmC,CAAnC;AACH,KAFD,MAEO,IAAI,oBAAoB,IAApB,CAAyB,UAAU,SAAnC,CAAJ,EAAmD;AAAE;AACxD,WAAK,KAAL,CAAW,UAAX,GAAwB,UAAxB,CAAmC,CAAnC;AACH,KAFM,MAEA;AAAE;AACL,WAAK,KAAL,CAAW,UAAX,GAAwB,UAAxB,CAAmC,CAAnC;AACH;AACJ,GAjCU;AAmCX,YAAU,kBAAU,IAAV,EAAmB,CACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GA5CU;AA8CX;AACA,kBA/CW,4BA+CM,WA/CN,EA+C0B;AACjC,UAAM,QAAN,CAAe,UAAU,cAAzB,EAAyC,WAAzC;AACH,GAjDU;AAoDX,SAAO;AACH,cADG,wBACO;AACN,aAAO,eAAP;AACH,KAHE;AAIH,YAJG,sBAIK;AACJ,aAAO,gBAAgB,QAAhB,EAAP;AACH;AANE,GApDI;AA6DX,QAAM,EA7DK;AAiEX,SAAO,EAjEI;AAqEX,UAAQ;AArEG,CAAf","sourcesContent":["import {Store} from \"vuex\";\r\nimport SampleController from \"@/vuex/controller/SampleController\";\r\nimport StateController from \"@/vuex/controller/StateController\";\r\nimport {VuexTypes} from \"@/vuex/config/VuexTypes\";\r\n\r\n\r\nlet sampleController: SampleController;\r\nlet stateController: StateController;\r\n\r\nlet store: Store<any>;\r\nlet instance: any;\r\n\r\nexport default {\r\n    init: function (vuexStore: Store<any>, callback: () => any) {\r\n        // Vuex < > Controller 연결\r\n        store = vuexStore;\r\n\r\n        sampleController = new SampleController(store);\r\n        stateController = new StateController(store);\r\n\r\n        // 자기 참조할 때 씀\r\n        instance = this;\r\n\r\n        // 서버 데이터 초기화 -> 완료 후 Callback\r\n        // MainService.getInitValue(function (data: any) {\r\n        //     instance.initData(data);\r\n        //     callback()\r\n        // });\r\n\r\n\r\n        // 모바일 인지 체크 -> Vuex\r\n        if (document.documentElement.clientWidth < 768) {\r\n            this.State.controller().setIsMobile(true);\r\n        } else {\r\n            this.State.controller().setIsMobile(false);\r\n        }\r\n\r\n        // 운영체제 체크\r\n        if (/Android/i.test(navigator.userAgent)) { // 안드로이드 체크\r\n            this.State.controller().setCheckOs(1);\r\n        } else if (/iPhone|iPad|iPod/i.test(navigator.userAgent)) { // IOS 체크\r\n            this.State.controller().setCheckOs(2);\r\n        } else { // 기타\r\n            this.State.controller().setCheckOs(3);\r\n        }\r\n    },\r\n\r\n    initData: function (data: any) {\r\n        // 서버 초기 데이터를 파싱 한다.\r\n        // // 유저 파싱\r\n        // this.setMyInfo(new User(data['user']));\r\n        //\r\n        // // 계정 JSON 파싱\r\n        // for (let key in data['accounts']) {\r\n        //     accountController.push(data['accounts'][key])\r\n        // }\r\n    },\r\n\r\n    // 서버 데이터 초기화가 완료를 파악할 때 사용한다. (서버 데이터 완료 후 뷰 그리기 등)\r\n    setInitCompleted(isCompleted: boolean) {\r\n        store.dispatch(VuexTypes.INIT_COMPLETED, isCompleted)\r\n    },\r\n\r\n\r\n    State: {\r\n        controller(): StateController {\r\n            return stateController\r\n        },\r\n        isMobile(): boolean {\r\n            return stateController.isMoblie();\r\n        }\r\n    },\r\n\r\n    User: {\r\n\r\n    },\r\n\r\n    Login: {\r\n\r\n    },\r\n\r\n    SignUp: {\r\n\r\n    },\r\n}"],"sourceRoot":""}]}